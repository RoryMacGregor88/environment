# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="rory-macgregor-agnoster"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
#DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(colorize colored-man-pages chucknorris django docker docker-compose git git-extras gnu-utils history-substring-search kubectl node npm python tmux yarn z)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...

unsetopt correct_all
setopt SHARE_HISTORY

# Better bindings for up/down keys to search history
#bindkey '^[[A' history-beginning-search-backward
#bindkey '^[[B' history-beginning-search-forward

# Environment Variables.
export NODENV_HOME="$HOME/.nodenv"
export PYENV_HOME="$HOME/.pyenv"

export PATH=/usr/local/bin:$PYENV_HOME/bin:$NODENV_HOME/bin:$HOME/bin:$HOME/local/bin:$HOME/.local/bin:/home/linuxbrew/.linuxbrew/bin:/usr/sbin:/root/bin:/usr/local/bin:/bin:/usr/bin:/usr/games:/sbin

export EDITOR=vim
export PAGER=less

export LS_COLORS='rs=0:di=34:ln=36:mh=00:pi=33:so=35:do=35:bd=33:cd=33:or=31:su=37:sg=30:ca=30:tw=30:ow=34:st=37:ex=32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:';

export LC_ALL=en_GB.UTF-8
export LANG=en_GB.UTF-8
export LANGUAGE=en_GB.UTF-8
export SWT_GTK3=0
export TERM=xterm-256color

# Aliases
#alias display='xrandr --output DVI-I-1-1 --auto --left-of DP-1'

alias vpn='ssh rory.macgregor@bastion.eu-west-1.testing.astrosat.net -D 5555 -N'

alias orbis='cd Desktop/Astrosat/orbis'
alias orbcl='cd Desktop/Astrosat/orbis/client'
alias flame='cd Desktop/flame'
alias chr='google-chrome'
alias top='htop'
alias vless='vim -u /usr/share/vim/vimcurrent/macros/less.vim'
alias rm='rm -v'
alias pjson='python -m json.tool'

# Windoze machine(s).

# Get a long listing using colours and human readable values for file size.
alias l='ls -lh --color=auto'
# Get a long listing using colours and human readable values for file size.
# plus all hidden files too.
alias la='ls -lah --color=auto'
# Get a long listing of directories only using colours, human readable.
alias ld='ls -lahd --color=auto */'
# Get a long listing of files by date descending.
alias lt='ls -lhrt --color=auto'

# List process owned by current user.
alias mps='ps -fu $USER'
alias h='history -f'
alias du='du -h'
alias df='df -h'
alias vi='vim'
alias ssh='ssh -X'
alias dc='cd'
#alias et='ssh -p1973 -X homer'
#alias ide='/opt/sts-bundle/sts-3.7.3.RELEASE/STS'
#alias ack='ack-grep --ignore-dir=target -i'
#alias bc='bc -l'

# Query the debian package manager database on already installed packages.
# USAGE: cinst <pkgname>.
alias cinst='dpkg -l | egrep'
# List files in package.
alias plist='dpkg -L '
# Find which package a file belongs to.
alias pin='dpkg -S'
# Search for packages to install.
# USAGE: psearch <pkgname>.
alias psearch='apt-cache search'
# Prints the name of each package currently installed
# USAGE: pinst <pkgname>.
alias pinst='apt-cache pkgnames | egrep'
# Show info on packages e.g. dependencies etc,
# USAGE pdep <pkgname>.
alias pdep='apt-cache showpkg'
# Describe package.
# USAGE: pdesc <pkgname>.
alias pdesc='apt-cache show'
alias upd='apt-get update'
alias upg='apt-get upgrade'
alias dist='apt-get dist-upgrade'
alias hold=apt-mark hold'
alias unhold=apt-mark unhold'
alias afl='apt-file list'

# Gets file(s) of type ?? from http://.... plus from sub-dirs.
# USAGE: get-all .xml http://foo.bar.com/dir/
#alias ga='wget -qr --no-parent -nH'
# Get file(s) of type mp3.
alias gmp3='wget -r -l1 -t1 -nd -N -np -A.mp3 -erobots=off'

# Git aliases
alias gt='git tag -n'
alias gm='git merge --ff-only'
alias gd='git diff -w --'
alias gdc='git diff -w --cached --'
alias gs='git stash'
alias gsl='git stash list'
alias gsp='git stash pop'
alias gsc='git stash clear'
alias gss='git stash show -p'
alias gf='git fetch'
alias gfd='git fetch && git diff $(current_branch) origin/$(current_branch)'
alias gcl='git clone'
alias gg='git log --stat'
alias gl='git pull --ff-only --rebase'
alias gbs='git branch-status'
alias gr='git rebase'
alias gcf='git clean -fd'
alias grp='git remote prune origin'
alias gpo='git push -u origin'
alias gfa='git fetch --all'
alias gfl='git fetch && git log $(current_branch) origin/$(current_branch)'
alias gbl='git blame'
alias grhh='git reset --hard'
alias gsh='git show'
alias gsk='git stash --keep-index'
alias gsu='git submodule update --init --recursive'
alias gpa='for f in `ls`; do echo $f; cd $f; git pull; cd ..; done'
alias gpn='git push --no-verify'
alias grev='git revert'
alias del='gb -D'
alias gsb='git for-each-ref --sort=-committerdate refs/heads/'

#alias mvn='mvn-color'
#alias mpre='mvn release:prepare'
#alias mper='mvn release:perform -Dgoals=deploy'
#alias mpreskip='mvn release:prepare -Darguments="-DskipITs"'
#alias mp='mvn package'
#alias mpt='mvn package -Dmaven-test.skip=true'


#alias vu='vagrant up'
#alias vd='vagrant destroy -f'
#alias vh='vagrant halt'
#alias vsh='vagrant ssh'
#alias vp='vagrant provision'
#alias vps='ps -ef | grep -V grep | grep -i vboxheadless'

alias diff='colordiff -u'

# Docker Aliases
alias dps='docker ps -a'
alias dk='docker kill'
alias drm='docker rm -v'
alias dti='docker rm -v $(docker ps -a -q -f status=exited) && docker rmi $(docker images -f "dangling=true" -q)'
alias de='docker exec -it'
alias dla='docker container ls -a'
alias dil='docker image ls'
#alias dla='docker container run'
alias di='docker image' ls'
alias di='docker image' rm'
alias dcc='docker commit -p'
alias dcl='docker load -i'
alias dip='docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}"'
# Start docker compose in `detatched` mode.
alias ddup='docker-compose up -d --build'
# Start docker compose in `interactive` mode.
alias dup='docker-compose up --build'
alias dh='docker stop'
# Run command in already running container e.g. dr <image name< <command>
alias dr='docker run -it'
alias dre='docker run -it --entrypoint /bin/bash'

export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

function dsh() {
  docker exec -it "$1" /bin/bash
}

function dex() {
  docker save -o "$1".tar "$1"
}

# PostgreSQL aliases
alias pg='sudo su postgres'

# AWS CLI aliases
alias al1='eval $(aws ecr get-login --no-include-email --region eu-west-1)'

alias al2='aws ecr get-login-password --region eu-west-1 | docker login 339570402237.dkr.ecr.eu-west-1.amazonaws.com --username AWS --password-stdin'

# Minikube Aliases
#alias mkd='minikube dashboard'

alias gup='for f in `ls`; do cd $f; git pull; cd ..; done'

#export MAVEN_OPTS="-Djava.security.auth.login.config=doesnotexist"

# Prevent deprecation warning message.
unset GREP_OPTIONS

# Nodenv
eval "$(nodenv init -)"

# Correct previous console commands.
#eval $(thefuck --alias)

export GITHUB_TOKEN=ef499278994f17b8ff3fc237c8e9cdcaecfb1f23
export GITHUB_REGISTRY_TOKEN=40d1378aa39ae00b9bcee1ab9fdc4f582621a1d0

export HOSTNAME=http://localhost:3000/
export SSH_USER=$USER

if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

eval "$(pyenv virtualenv-init -)"

export PIPENV_VENV_IN_PROJECT=1